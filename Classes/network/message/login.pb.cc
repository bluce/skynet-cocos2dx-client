// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CMsgPlayerLoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgPlayerLoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMsgPlayerLoginResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMsgPlayerLoginResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* LoginOpcode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_login_2eproto() {
  protobuf_AddDesc_login_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "login.proto");
  GOOGLE_CHECK(file != NULL);
  CMsgPlayerLoginRequest_descriptor_ = file->message_type(0);
  static const int CMsgPlayerLoginRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlayerLoginRequest, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlayerLoginRequest, password_),
  };
  CMsgPlayerLoginRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgPlayerLoginRequest_descriptor_,
      CMsgPlayerLoginRequest::default_instance_,
      CMsgPlayerLoginRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlayerLoginRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlayerLoginRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgPlayerLoginRequest));
  CMsgPlayerLoginResponse_descriptor_ = file->message_type(1);
  static const int CMsgPlayerLoginResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlayerLoginResponse, entityid_),
  };
  CMsgPlayerLoginResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CMsgPlayerLoginResponse_descriptor_,
      CMsgPlayerLoginResponse::default_instance_,
      CMsgPlayerLoginResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlayerLoginResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgPlayerLoginResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CMsgPlayerLoginResponse));
  LoginOpcode_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_login_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgPlayerLoginRequest_descriptor_, &CMsgPlayerLoginRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CMsgPlayerLoginResponse_descriptor_, &CMsgPlayerLoginResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_login_2eproto() {
  delete CMsgPlayerLoginRequest::default_instance_;
  delete CMsgPlayerLoginRequest_reflection_;
  delete CMsgPlayerLoginResponse::default_instance_;
  delete CMsgPlayerLoginResponse_reflection_;
}

void protobuf_AddDesc_login_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013login.proto\"<\n\026CMsgPlayerLoginRequest\022"
    "\020\n\010username\030\001 \002(\t\022\020\n\010password\030\002 \002(\t\"+\n\027C"
    "MsgPlayerLoginResponse\022\020\n\010entityId\030\001 \002(\t"
    "*T\n\013LoginOpcode\022!\n\033ID_C2S_PLAYER_LOGIN_R"
    "EQUEST\020\201\200\004\022\"\n\034ID_S2C_PLAYER_LOGIN_RESPON"
    "SE\020\202\200\004", 206);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
  CMsgPlayerLoginRequest::default_instance_ = new CMsgPlayerLoginRequest();
  CMsgPlayerLoginResponse::default_instance_ = new CMsgPlayerLoginResponse();
  CMsgPlayerLoginRequest::default_instance_->InitAsDefaultInstance();
  CMsgPlayerLoginResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_login_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_login_2eproto {
  StaticDescriptorInitializer_login_2eproto() {
    protobuf_AddDesc_login_2eproto();
  }
} static_descriptor_initializer_login_2eproto_;
const ::google::protobuf::EnumDescriptor* LoginOpcode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginOpcode_descriptor_;
}
bool LoginOpcode_IsValid(int value) {
  switch(value) {
    case 65537:
    case 65538:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgPlayerLoginRequest::kUsernameFieldNumber;
const int CMsgPlayerLoginRequest::kPasswordFieldNumber;
#endif  // !_MSC_VER

CMsgPlayerLoginRequest::CMsgPlayerLoginRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPlayerLoginRequest)
}

void CMsgPlayerLoginRequest::InitAsDefaultInstance() {
}

CMsgPlayerLoginRequest::CMsgPlayerLoginRequest(const CMsgPlayerLoginRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgPlayerLoginRequest)
}

void CMsgPlayerLoginRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgPlayerLoginRequest::~CMsgPlayerLoginRequest() {
  // @@protoc_insertion_point(destructor:CMsgPlayerLoginRequest)
  SharedDtor();
}

void CMsgPlayerLoginRequest::SharedDtor() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (this != default_instance_) {
  }
}

void CMsgPlayerLoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgPlayerLoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgPlayerLoginRequest_descriptor_;
}

const CMsgPlayerLoginRequest& CMsgPlayerLoginRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

CMsgPlayerLoginRequest* CMsgPlayerLoginRequest::default_instance_ = NULL;

CMsgPlayerLoginRequest* CMsgPlayerLoginRequest::New() const {
  return new CMsgPlayerLoginRequest;
}

void CMsgPlayerLoginRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        username_->clear();
      }
    }
    if (has_password()) {
      if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        password_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgPlayerLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPlayerLoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // required string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPlayerLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPlayerLoginRequest)
  return false;
#undef DO_
}

void CMsgPlayerLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPlayerLoginRequest)
  // required string username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPlayerLoginRequest)
}

::google::protobuf::uint8* CMsgPlayerLoginRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPlayerLoginRequest)
  // required string username = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPlayerLoginRequest)
  return target;
}

int CMsgPlayerLoginRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string username = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // required string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgPlayerLoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgPlayerLoginRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgPlayerLoginRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgPlayerLoginRequest::MergeFrom(const CMsgPlayerLoginRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_password()) {
      set_password(from.password());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgPlayerLoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPlayerLoginRequest::CopyFrom(const CMsgPlayerLoginRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPlayerLoginRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CMsgPlayerLoginRequest::Swap(CMsgPlayerLoginRequest* other) {
  if (other != this) {
    std::swap(username_, other->username_);
    std::swap(password_, other->password_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgPlayerLoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgPlayerLoginRequest_descriptor_;
  metadata.reflection = CMsgPlayerLoginRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CMsgPlayerLoginResponse::kEntityIdFieldNumber;
#endif  // !_MSC_VER

CMsgPlayerLoginResponse::CMsgPlayerLoginResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPlayerLoginResponse)
}

void CMsgPlayerLoginResponse::InitAsDefaultInstance() {
}

CMsgPlayerLoginResponse::CMsgPlayerLoginResponse(const CMsgPlayerLoginResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CMsgPlayerLoginResponse)
}

void CMsgPlayerLoginResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  entityid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CMsgPlayerLoginResponse::~CMsgPlayerLoginResponse() {
  // @@protoc_insertion_point(destructor:CMsgPlayerLoginResponse)
  SharedDtor();
}

void CMsgPlayerLoginResponse::SharedDtor() {
  if (entityid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete entityid_;
  }
  if (this != default_instance_) {
  }
}

void CMsgPlayerLoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgPlayerLoginResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMsgPlayerLoginResponse_descriptor_;
}

const CMsgPlayerLoginResponse& CMsgPlayerLoginResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_login_2eproto();
  return *default_instance_;
}

CMsgPlayerLoginResponse* CMsgPlayerLoginResponse::default_instance_ = NULL;

CMsgPlayerLoginResponse* CMsgPlayerLoginResponse::New() const {
  return new CMsgPlayerLoginResponse;
}

void CMsgPlayerLoginResponse::Clear() {
  if (has_entityid()) {
    if (entityid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      entityid_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CMsgPlayerLoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPlayerLoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string entityId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_entityid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->entityid().data(), this->entityid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "entityid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPlayerLoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPlayerLoginResponse)
  return false;
#undef DO_
}

void CMsgPlayerLoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPlayerLoginResponse)
  // required string entityId = 1;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entityid().data(), this->entityid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "entityid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->entityid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPlayerLoginResponse)
}

::google::protobuf::uint8* CMsgPlayerLoginResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPlayerLoginResponse)
  // required string entityId = 1;
  if (has_entityid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->entityid().data(), this->entityid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "entityid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->entityid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPlayerLoginResponse)
  return target;
}

int CMsgPlayerLoginResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string entityId = 1;
    if (has_entityid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->entityid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgPlayerLoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CMsgPlayerLoginResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CMsgPlayerLoginResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMsgPlayerLoginResponse::MergeFrom(const CMsgPlayerLoginResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_entityid()) {
      set_entityid(from.entityid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CMsgPlayerLoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPlayerLoginResponse::CopyFrom(const CMsgPlayerLoginResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPlayerLoginResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CMsgPlayerLoginResponse::Swap(CMsgPlayerLoginResponse* other) {
  if (other != this) {
    std::swap(entityid_, other->entityid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CMsgPlayerLoginResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMsgPlayerLoginResponse_descriptor_;
  metadata.reflection = CMsgPlayerLoginResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
